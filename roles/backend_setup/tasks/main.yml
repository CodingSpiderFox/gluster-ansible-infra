---
# Gather facts to determine the distribution
- name: Gather facts to determine the OS distribution
  setup:
    gather_subset:
      - '!all'
      - '!any'
      - distribution

# Create a logical volume thinpool when thinpoolname is given
- name: Change to Install lvm tools for debian systems.
  package:
    name: thin-provisioning-tools
    state: present
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: Change to Install lvm tools for RHEL systems.
  package:
    name: device-mapper-persistent-data
    state: present
  when: ansible_os_family == 'RedHat'

- name: Install python-yaml package for Debian systems
  package:
    name: python-yaml
    state: present
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

# Initialize vdo_devs to empty list, vdo_devs would not not be initialized if
# search fails
- name: Initialize vdo_devs array
  set_fact:
     vdo_devs: []

# Get the list of volume groups created on vdo disks
# This is a bit hacky, we rely on pvname to get vdo disks
- name: Record VDO devices (if any)
  set_fact:
     vdo_devs: "{{ vdo_devs|default([]) + [ item.vgname ] }}"
  with_items: "{{ gluster_infra_volume_groups | default([]) }}"
  when: item.pvname is search("/dev/mapper/")

- name: Create a vdo disk
  import_tasks: vdo_create.yml
  when: gluster_infra_vdo is defined
  tags:
    - vdocreate

- name: "Execute phase #1 of LVM"
  import_tasks: main-lvm.yml


# Create a filesystem on the disks.
- name: Create a filesystem on the disks
  import_tasks: fscreate.yml
  when: gluster_infra_lv_logicalvols is defined or
        gluster_infra_thick_lvs is defined
  tags:
    - fscreate

# Mount the devices
- name: Mount the devices
  import_tasks: mount.yml
  when: gluster_infra_mount_devices is defined and gluster_infra_mount_devices is not none
  tags:
    - mount
